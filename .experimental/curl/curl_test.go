package curl_test

import (
	"github.com/iotaledger/iota.go/consts"
	"github.com/iotaledger/iota.go/curl"
	"github.com/iotaledger/iota.go/trinary"
	"testing"
)

func BenchmarkCurl(b *testing.B) {
	input := trinary.Trits{
		1, 1, -1, 0, 0, 1, 1, 1, -1, 0, 0, 1, 1, 1, 1, 1, 0, 0, -1, 0, 1, 0, 1, 1, -1, 1, -1, 0, 0, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, 1, -1,
		-1, 1, 1, 1, -1, 0, 1, -1, -1, -1, -1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, -1, 1, 0, 1, 0, 0, 0, 0, 0, -1, -1, -1, -1, 1, 0,
		1, 1, 1, -1, -1, 0, -1, -1, 1, 0, 0, -1, -1, 0, 0, 0, 0, 1, 0, 1, 1, -1, 0, 0, -1, -1, 1, -1, 1, 0, -1, 1, -1, -1, 1, 1, 0, 0, -1, 0, 0, 1,
		-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, -1, -1, 1, 0, -1, 1, 0, -1, 1, 0, -1, 1, 0, -1, 1, -1, -1, 1, 1, 1, 1, 1, 1, 0, 1, 1, -1, 1, -1, 0,
		0, 1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, -1, 0, -1, 1, -1, 1,
		1, 1, 0, 0, 0, -1, 1, 1, -1, 0, 0, 1, -1, -1, 0, 0, 1, 0, 0, -1, 1, 1, 0, 1, 0, -1, 1, -1, -1, 1, 1, 1, -1, 0, -1, 0}
	c := curl.NewCurl()
	// run the Fib function b.N times
	for n := 0; n < b.N; n++ {
		c.Absorb(input)
		c.Squeeze(consts.HashTrinarySize)
		c.Reset()
	}
}
